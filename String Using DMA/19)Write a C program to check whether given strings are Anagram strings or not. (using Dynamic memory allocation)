//19)Write a C program to check whether given strings are Anagram strings or not. (using Dynamic memory allocation)
Ans:
Eg:
Input String1: abccd
Input String2: cbcda
Output String: Strings are anagram
Ans:
#include<stdio.h>
#include<stdlib.h>
void main()
{
	int size = 1, i = 0;
	char* str = NULL;
	char ch;
	str = (char*)malloc(sizeof(char));
	*str = '\0';
	printf("enter string1:");
	do {
		scanf_s("%c", &ch);
		if (ch != '\n') {
			size++;
			str = (char*)realloc(str, size * sizeof(char));
			*(str + i) = ch;
			*(str + i + 1) = '\0';
			i++;
		}
	} while (ch != '\n');
	int size1 = 1;
	i = 0;
	char* str1 = NULL;
	char ch1;
	str1 = (char*)malloc(sizeof(char));
	*str1 = '\0';
	printf("enter string2:");
	do {
		scanf_s("%c", &ch1);
		if (ch1 != '\n') {
			size1++;
			str1 = (char*)realloc(str1, size1 * sizeof(char));
			*(str1 + i) = ch1;
			*(str1 + i + 1) = '\0';
			i++;
		}
	} while (ch1 != '\n');
	int len, len1, len2, found = 0, not_found = 0, j = 0;
	i = 0;
	for (len1 = 0; len1 < size - 1; ++len1);
	for (len2 = 0; len2 < size1 - 1; ++len2);
	if (len1 == len2)
	{
		len = len1;
		for (i = 0; i < len; i++)
		{
			found = 0;
			for (j = 0; j < len; j++)
			{
				if (*(str1 + i) == *(str + j))
				{
					found = 1;
					break;
				}
			}
			if (found == 0)
			{
				not_found = 1;
				break;
			}
		}
		if (not_found == 1)
			printf("\nStrings are not Anagram");
		else
			printf("\nStrings are Anagram");
	}
	return 0;
}
